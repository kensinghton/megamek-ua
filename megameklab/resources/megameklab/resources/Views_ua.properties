MovementMode.NONE=Нема
MovementMode.BIPED=Біпед
MovementMode.TRIPOD=Трипод
MovementMode.QUAD=Квад
MovementMode.TRACKED=Гусеничний
MovementMode.WHEELED=Колесний
MovementMode.HOVER=На повітряній подушці
MovementMode.VTOL=ВЗіП
MovementMode.NAVAL=Морський
MovementMode.HYDROFOIL=Підводне крило
MovementMode.SUBMARINE=Підводний човен
MovementMode.INF_LEG=Піша
MovementMode.INF_MOTORIZED=Моторизована
MovementMode.INF_JUMP=Стрибкова
MovementMode.BIPED_SWIM=Підводний Рух
MovementMode.QUAD_SWIM=Підводний Рух
MovementMode.WIGE=Екраноплан
MovementMode.AERODYNE=Аеродин
MovementMode.SPHEROID=Сфероід
MovementMode.INF_UMU=Підводний Рух
MovementMode.AEROSPACE=Аерокосмічний
MovementMode.AIRSHIP=Дирижабль
MovementMode.STATION_KEEPING=Стаціонарний
MovementMode.RAIL=Залізничний
MovementMode.MAGLEV=МагЛев

BasicInfoView.txtChassis.text=Шассі:
BasicInfoView.txtChassis.tooltip=Юніти з однаковим шассі зазвичай вважаються варіантами
BasicInfoView.txtModel.text=Модель:
BasicInfoView.txtModel.tooltip=Ім'я цього варіанту
BasicInfoView.txtYear.text=Рік:
BasicInfoView.txtYear.tooltip=Рік, в якому цей юніт було вперше збудовано; це буде визначати доступне обладнання
BasicInfoView.cbFaction.text=Фракція:
BasicInfoView.cbFaction.tooltip=<html>Нове обладнання може бути доступне лише деяким фракціям до тих пір, поки не стане більш поширеною.<br/>"Будь-яка" ігнорує обмеження фракції.</html>
BasicInfoView.txtSource.text=Джерело/Епоха:
BasicInfoView.txtSource.tooltip=Джерело, в якому описаний юніт та ігрова епоха.
BasicInfoView.cbTechBase.text=Технологічна база:
BasicInfoView.cbTechBase.tooltip=Визначає доступне обладнання та опції конструювання. Змішані технологіх дозволяють використовувати обладнання з інших технологічних баз.
BasicInfoView.cbTechLevel.text=Рівень технології:
BasicInfoView.cbTechLevel.tooltip=<html>Фільтрування опцій по рівню правил.<br/>При використанні непостійного рівня технологій та року гри, рівень технологій вираховується з використанням ігрового року замість року створення.</html>
BasicInfoView.txtManualBV.text=Ручне BV:
BasicInfoView.txtManualBV.tooltip=Альтернатива розрахованому Бойовому Значенню (BV).
BasicInfoView.cbTechBase.values=Внутрішня Сфера,Клан,Змішана Внутрішня Сфера,Змішаний Клан

MekChassisView.baseType.values=Стандартний,Індустріальний,АМ,КвадТех
MekChassisView.motiveType.values=Біпед,Квад,Трипод
MekChassisView.lamType.values=Стандартний,Дворежимний
MekChassisView.qvType.values=Гусеничний,Колісний
MekChassisView.primitiveType.values=Примітивний,Примітивний Індустріальний
MekChassisView.primitiveMotiveType.values=Біпед,Квад
MekChassisView.spnTonnage.text=Тоннаж:
MekChassisView.spnTonnage.tooltip=Значення між 10 до 200 із кроком в 5 тонн. Надважкі (більше 100) доступні лише ВС/Просунуті.
MekChassisView.chkOmni.text=Омні
MekChassisView.chkOmni.tooltip=Омні юніти мають обладнання і озброєння в нішах та може бути швидко змінене. Не доступно на Індустріальних та АМ.
MekChassisView.cbBaseType.text=Базовий Тип:
MekChassisView.cbBaseType.tooltip=<html>АМ доступні лише для ВС. КвадТех доступні лише для Кланів.<br/>Скидає юніт; виключенням є зміна типу зі Стандартного  в Індустріальний і навпаки.</html>
MekChassisView.cbMotiveType.text=Тип руху:
MekChassisView.cbMotiveType.tooltip=<html>Визначає кількість ніг.<br/>Скидає юніт.</html>
MekChassisView.cbMotiveType.LAM.tooltip=Стандартний має режими Меха, Винищувача та АероМеха (гібридний). Дворежимний виключає режим АероМеха.
MekChassisView.cbMotiveType.QuadVee.tooltip=Тип руху в режимі техніки.
MekChassisView.cbStructure.text=Структура:
MekChassisView.cbStructure.tooltip=Матеріал, що використовується для внутрішньої структури. Впливає на вагу та доступне місце.
MekChassisView.cbEngine.text=Двигун:
MekChassisView.cbEngine.tooltip=<html>Тип двигуна визначає вартість, вагу та місце.<br/>Не-фьюзіонні двигуни дозволені лише в експериментальних правилах (крім примітивних та індустріальних Мехах).<br/>Мехи повинні мати фьюзіонний чи фіссіонний двигун для використання стрибкових двигунів чи двигунах підводного руху.</html>
MekChassisView.cbGyro.text=Гіро:
MekChassisView.cbGyro.tooltip=Тип гіроскопу визначає вагу та місце. Надміцні гіро можуть витримати більше пошкоджень перед знищенням.
MekChassisView.cbCockpit.text=Кокпіт:
MekChassisView.cbCockpit.tooltip=Тип кокпіту визначає вагу, місце та локацію. Деякі кокпіти надають спеціальні можливості.
MekChassisView.cbEnhancement.text=Підсилення:
MekChassisView.cbEnhancement.tooltip=Взаємно несумісні типи міомерних підсилень.
MekChassisView.cbEnhancement.null=Нема
MekChassisView.chkFullHeadEject.text=Катапультування Всієї Голови
MekChassisView.chkFullHeadEject.tooltip=Система захищає катапультувавшогося пілота у ворожому середовищі.
MekChassisView.btnResetChassis.text=Скинути Шассі
MekChassisView.btnResetChassis.tooltip=Видалити все обладнання в нішах для отримання чистого омні-шассі.

ProtomekChassisView.cbMotiveType.text=Конфігурація:
ProtomekChassisView.cbMotiveType.values=Біпед,Квад,Глайдер
ProtomekChassisView.spnTonnage.text=Тоннаж:
ProtomekChassisView.spnTonnage.tooltip=Значення між 2 та 15 тоннами з кроком в 1 тонну. Надважкі (більше 9) доступні лише після 3075 (пізніше з деякими опціями)
ProtomekChassisView.chkMainGun.text=Основна зброя
ProtomekChassisView.chkMainGun.tooltip=Додає опціональну локацію основної зброї
ProtomekChassisView.lblEnhancements.text=Підсилення
ProtomekChassisView.chkMyomerBooster.text=Міомерний підсилювач
ProtomekChassisView.chkMyomerBooster.tooltip=Підвищує швидкість бігу
ProtomekChassisView.chkPartialWing.text=Мале крило
ProtomekChassisView.chkPartialWing.tooltip=Підвищує ПР Стрибка
ProtomekChassisView.chkMagneticClamps.text=Магнітні скоби
ProtomekChassisView.chkMagneticClamps.tooltip=Дозволяє транспортування як у механізованої Бойової Броні
ProtomekChassisView.chkQuadMelee.text=Рукопашна Система для Квадів
ProtomekChassisView.chkQuadMelee.tooltip=Підвищує пошкодження від Шалених атак
ProtomekChassisView.chkISInterface.text=Інтерфейсний кокпіт ВС
ProtomekChassisView.chkISInterface.tooltip=Дозволяє пілотувати людині без всіх кінцівок за допомогою ПНІТ (Прямого Нейронного Інтерфейсу з Технікою) імпланта.

CVChassisView.turrets.values=Нема,Одна,Подвійна,Chin???
CVChassisView.spnTonnage.text=Тоннаж:
CVChassisView.spnTonnage.tooltip=Максимальний тоннаж різниться згідно з типом руху.
CVChassisView.chkOmni.text=Омні
CVChassisView.chkOmni.tooltip=Омні юніти мають обладнання і озброєння в нішах та може бути швидко змінене.
CVChassisView.chkSuperheavy.text=Надважкий
CVChassisView.chkSuperheavy.tooltip=<html>Змінити тип техніки на надважкий..<br/>Скидає не-ВЗіП юніти.</html>
CVChassisView.chkTrailer.text=Причеп
CVChassisView.chkTrailer.tooltip=<html>Техніка, сконструйована як причеп, може бути переміщена іншою бойовою технікою чи технікою підтримки, що має модифікацію "тягач".<br/>\
  Двигун не є необхідністю для причепа; якщо ж він має працювати окремо, то вистачить двигуна з потужністю 10.</html>
CVChassisView.chkControlSystems.text=Система Контролю
CVChassisView.chkControlSystems.tooltip=<html>Combat vehicles built as trailers can leave out the control systems to reduce weight<br/>\
  Trailers without control systems cannot operate independently of a suitable tractor.</html>
CVChassisView.cbEngine.text=Engine:
CVChassisView.cbEngine.tooltip=Non-fusion or fission engines require power amplifiers for energy weapons. Fusion and fission engines require weight allocated to shielding.
CVChassisView.cbMotiveType.text=Motive Type:
CVChassisView.cbMotiveType.tooltip=Determines movement rules and engine size calculations. Switching to or from VTOL resets unit.
CVChassisView.cbTurrets.text=Turrets:
CVChassisView.cbTurrets.tooltip=Vehicles with turrets must allocate additional weight to weapons mounted in that turret. Advanced rules allow vehicles with two turrets or VTOLs with a chin turret.
CVChassisView.spnTurretWt.text=Base Chassis Turret 1 Weight:
CVChassisView.spnTurretWt.tooltip=Omni vehicles must determine the weight of the turret(s) as part of the base chassis configuration, limiting the weapon loadout in variants.
CVChassisView.spnTurret2Wt.text=Base Chassis Turret 2 Weight:
CVChassisView.spnTurret2Wt.tooltip=Omni vehicles must determine the weight of the turret(s) as part of the base chassis configuration, limiting the weapon loadout in variants.
CVChassisView.spnFixedTroop.text=Fixed Troop Space:
CVChassisView.spnFixedTroop.tooltip=Tonnage devoted to infantry transport.
CVChassisView.spnPodTroop.text=Pod Troop Space:
CVChassisView.spnPodTroop.tooltip=Pod space devoted to infantry transport.
CVChassisView.btnResetChassis.text=Reset Chassis
CVChassisView.btnResetChassis.tooltip=Remove all pod-mounted equipment and troop space to strip unit down to base omni chassis.

CVTransportView.lblFixed.text=Fixed
CVTransportView.lblPod.text=Pod
CVTransportView.lblTroopSpace.text=Troop Space
CVTransportView.troopSpace.tooltip=The tonnage devoted to carrying combat-ready infantry. This does not include crew quarters.
CVTransportView.bay.tooltipFormat=The tonnage devoted to cargo space. Each ton provides %3.2f tons of capacity.

FighterChassisView.spnTonnage.text=Tonnage:
FighterChassisView.spnTonnage.tooltip=Value between 5 and 100 in 5 ton increments. Conventional fighters are limited to 50 tons.
FighterChassisView.chkOmni.text=Omni
FighterChassisView.chkOmni.tooltip=Omni units mount equipment in pods that can be swapped quickly. Not available to conventional fighters.
FighterChassisView.txtSI.text=SI:
FighterChassisView.txtSI.tooltip=Structural integrity is based on fighter tonnage and speed.
FighterChassisView.chkVSTOL.text=VSTOL
FighterChassisView.chkVSTOL.tooltip=Very Short Take Off and Landing, automatic for aerospace fighter.
FighterChassisView.cbFighterType.text=Type:
FighterChassisView.cbFighterType.tooltip=Aerospace fighters can function on atmospheric and space maps. Conventional fighters are limited to atmospheric.
FighterChassisView.cbFighterType.values=Aerospace,Conventional
FighterChassisView.cbEngine.text=Engine:
FighterChassisView.cbEngine.tooltip=Type of engine determines cost and weight. Light, XL, XXL, or large engines take up weapon slots in the tail of conventional fighters.
FighterChassisView.cbCockpit.text=Cockpit:
FighterChassisView.cbCockpit.tooltip=Cockpit type determines cost and weight of cockpit.
FighterChassisView.btnResetChassis.text=Reset Chassis
FighterChassisView.btnResetChassis.tooltip=Remove all pod-mounted equipment and troop space to strip unit down to base omni chassis.

DropshipChassisView.spnTonnage.text=Tonnage:
DropshipChassisView.spnTonnage.tooltip=<html>Small Craft range 100-200 tons in 5 ton increments.<br/>Aerodyne Dropships range 200-35,000 tons in 100-ton increments.<br/>Spheroid Dropships range 200-100,000 tons in 100-ton increments.</html>
DropshipChassisView.chkFunction.text=Military
DropshipChassisView.chkFunction.tooltip=<html>Whether a Small Craft or Dropship is constructed as a civilian or military unit<br/>affects fuel usage and crew requirements.</html>
DropshipChassisView.chkKFBoom.text=KF-Boom
DropshipChassisView.chkKFBoom.tooltip=A Dropship without a KF-Boom can still dock to Jumpships but cannot be carried through hyperspace.
DropshipChassisView.cbBaseType.text=Vessel Type:
DropshipChassisView.cbBaseType.tooltip=The type of unit being constructed.
DropshipChassisView.cbBaseType.values=Small Craft,Dropship
DropshipChassisView.cbChassisType.text=Shape:
DropshipChassisView.cbChassisType.tooltip=Aerodyne craft have better handling in an atmosphere while spheroids make more efficient use of armor and structure tonnage.
DropshipChassisView.cbChassisType.values=Aerodyne,Spheroid
DropshipChassisView.spnSI.text=Structural Integrity:
DropshipChassisView.spnSI.tooltip=The structural integrity determines the maximum armor that can be mounted.

AdvAeroChassisView.spnTonnage.text=Tonnage:
AdvAeroChassisView.spnTonnage.tooltip=<html>Jumpships range 50,000-500,000 tons in 1,000-ton increments.<br/>Warships range 100,000-2,500,000 tons in 10,000-ton increments.<br/>Space Stations range 2,000-2,500,000 tons in 500 ton increments.<br/>Subcompact Warships range 5,000-25,000 tons in 100 ton increments.</html>
AdvAeroChassisView.chkLFBattery.text=Lithium-Fusion Battery
AdvAeroChassisView.chkLFBattery.tooltip=A lithium-fusion battery allows a ships to make a second jump before having to recharge.
AdvAeroChassisView.chkSail.text=Sail
AdvAeroChassisView.chkSail.tooltip=Energy collection sail can charge a jump system or batteries.
AdvAeroChassisView.chkModular.text=Modular
AdvAeroChassisView.chkModular.tooltip=A modular space station is more expensive to produce but faster to build. This has no effect on play other than cost.
AdvAeroChassisView.chkMilitary.text=Military
AdvAeroChassisView.chkMilitary.tooltip=A military space station can make more frequent facing changes.
AdvAeroChassisView.cbBaseType.text=Vessel Type:
AdvAeroChassisView.cbBaseType.tooltip=The type of unit being constructed.
AdvAeroChassisView.cbBaseType.values=Jumpship,Warship,Space Station,Subcompact Warship
AdvAeroChassisView.spnRange.text=Range (light years):
AdvAeroChassisView.spnRange.tooltip=For each light year of jump range the mass of the drive core increase by 3% of the vessel tonnage.
AdvAeroChassisView.spnSI.text=Structural Integrity:
AdvAeroChassisView.spnSI.tooltip=The structural integrity determines the maximum armor that can be mounted.

GravDeckView.columnNames.values=Diameter,Size,Tonnage
GravDeckView.btnAdd.text=Add
GravDeckView.btnAdd.tooltip=Add a gravity deck. Maximum number of gravity decks is 3 plus 1 per 100,000 tons or fraction thereof.
GravDeckView.btnRemove.text=Remove
GravDeckView.btnRemove.tooltip=Remove the selected gravity deck.
GravDeckView.tblGravDecks.tooltip=<html>Gravity decks under 100 meters in diameter have a mass of 50 tons.<br/>Gravity decks 100-250 meters in diameter and have a mass of 100 tons.<br/>Gravity decks over 250 and up to 1,500 meters can only be mounted on space stations and have a mass of 500 tons.</html>

BAChassisView.cbChassisType.text=Body Type:
BAChassisView.cbChassisType.tooltip=Humanoid (biped) chassis can mount manipulators in the arms and use non-ground movement. Quad chassis are faster.
BAChassisView.cbBodyType.values=Humanoid,Quad
BAChassisView.cbWeightClass.text=Weight Class:
BAChassisView.cbWeightClass.tooltip=Weight class determines maximum component weight and the weight cost of movement systems.
BAChassisView.spnSquadSize.text=Squad Size:
BAChassisView.spnSquadSize.tooltip=The number of troopers in the unit.
BAChassisView.cbTurretType.text=Turret Type:
BAChassisView.cbTurretType.tooltip=<html>Quad chassis can add a turret to increase the space available for equipment at the cost of extra weight.<br/>A modular turret weighs more but allows reconfiguration like an omni unit.</html>
BAChassisView.cbTurretType.values=None,Standard,Modular
BAChassisView.spnTurretSize.text=Turret Size:
BAChassisView.spnTurretSize.tooltip=The number of additional critical slots available in the turret. The weight of the turret increases with its size.
BAChassisView.chkExoskeleton.text=Exoskeleton
BAChassisView.chkExoskeleton.tooltip=The lightest weight class can be designated as industrial exoskeletons.
BAChassisView.chkHarjel.text=Harjel
BAChassisView.chkHarjel.tooltip=Clan exoskeletons may be constructed with a lighter chassis that does not include Harjel.

HeatSinkView.mechNames.values=Single,IS Double,Clan Double,Compact,Laser,Double (Prototype),Double(Freezer)
HeatSinkView.aeroNames.values=Single,Double,Double (Prototype)
HeatSinkView.cbHSType.text=Type:
HeatSinkView.cbHSType.tooltip=Type determines weight, space, and heat dissipation abilities. All heat sinks on the unit must be of the same type.
HeatSinkView.spnCount.text=Number:
HeatSinkView.spnCount.tooltip=The total number of heat sinks on the unit. Some heat sinks are integral to fusion (10), fission (5), and fuel cell engines (1) at no additional weight.
HeatSinkView.spnBaseCount.text=Base (Omni):
HeatSinkView.spnBaseCount.tooltip=The number of heat sinks that are part of the base chassis configuration.
HeatSinkView.spnPrototypeCount.text=Double:
HeatSinkView.spnPrototypeCount.tooltip=<html>Prototype double heat sinks can be mixed with single heat sinks on the same unit.<br/>\
  The engine's slot-free capacity may only be applied to the single heat sinks.
HeatSinkView.lblCritFree.text=Engine Free:
HeatSinkView.lblCritFree.tooltip=<html>These heat sinks are an integral part of the engine and do not have to be assigned critical space.<br/>Omni units must assign critical space to any pod-mounted heat sinks even if they would be part of the engine in standard Mechs.</html>
HeatSinkView.lblWeightFree.text=Weight Free:
HeatSinkView.lblWeightFree.tooltip=<html>These heat sinks are included in the weight of the engine.</html>

ArmorView.cbArmorType.text=Armor Type:
ArmorView.cbArmorType.tooltip=The type of armor determines the amount of protection per ton and the amount of space required. Some armors provide additional special abilities.
ArmorView.spnTonnage.text=Armor Tonnage:
ArmorView.spnTonnage.tooltip=The total weight of all the unit's armor.
ArmorView.spnFactor.text=Armor Factor:
ArmorView.spnFactor.tooltip=The total number of armor points.
ArmorView.chkPatchwork.text=Patchwork
ArmorView.chkPatchwork.tooltip=Assign armor types by individual location.
ArmorView.btnMaximize.text=Maximize Armor
ArmorView.btnMaximize.tooltip=Use the maximum amount of armor allowed for this unit.
ArmorView.btnRemaining.text=Use Remaining Tonnage
ArmorView.btnRemaining.tooltip=Use all remaining unallocated tonnage for armor, up to the maximum allowed for the unit.
ArmorView.spnArmorPoints.text=Points:
ArmorView.spnArmorPoints.tooltip=The number of points of armor for the unit.
ArmorView.cbSVTechRating.text=Armor Tech Rating:
ArmorView.cbSVTechRating.tooltip=Higher tech ratings increase decrease the weight of each armor point.
ArmorView.cbBARRating.text=BAR Rating:
ArmorView.cbBARRating.tooltip=<html>Armors with a higher Barrier Armor Rating (BAR) are more likely to prevent penetrating shots but are heavier.<br/>The highest ratings (> 50 kg/pt) are only available with the armored chassis modification.<br/>BAR 10 armor occupies equipment slots at tech ratings E and F.</html>

ArmorLocationView.lblRear.text=Rear
ArmorLocationView.lblMax.format=Max: %d

ArmorAllocationView.txtUnallocated.text=Unallocated Armor Points:
ArmorAllocationView.txtAllocated.text=Allocated Armor Points:
ArmorAllocationView.txtTotal.text=Total Armor Points:
ArmorAllocationView.txtMaxPossible.text=Maximum Possible Armor Points:
ArmorAllocationView.txtWasted.text=Wasted Armor Points:
ArmorAllocationView.panPatwork.title=Patchwork
ArmorAllocationView.locationTooltip.format=<html>Points per ton: %.2f<br/>Current tonnage: %.3f</html>
ArmorAllocationView.btnAutoAllocate.text=Auto-Allocate Armor
ArmorAllocationView.txtPointsPerTon.text=Points Per Ton:
ArmorAllocationView.txtPointsPerTon.tooltip=The number of armor points provided by one ton of this armor.
ArmorAllocationView.txtKgPerPoint.text=Kg Per Point:
ArmorAllocationView.txtKgPerPoint.tooltip=The weight of a point of this armor.

MovementView.lblBase.text=Base
MovementView.lblFinal.text=Final
MovementView.lblWalk.values=Walk MP:,Cruise MP:,Safe Thrust:,Walk MP:
MovementView.spnWalk.tooltip=The base walk/cruise/safe thrust value.
MovementView.txtWalkFinal.tooltip=The walk/cruise/safe thrust value modified by movement-restricting equipment.
MovementView.lblRun.values=Run MP:,Flank MP:,Max Thrust:,?
MovementView.txtRunBase.tooltip=The base run/flank/max thrust value.
MovementView.txtRunFinal.tooltip=The run/flank/max thrush value modified by movement-restricting or enhancing equipment.
MovementView.spnJump.tooltip=The base MP for non-ground movement, such as jump, underwater (UMU), or VTOL.
MovementView.txtJumpFinal.tooltip=Non-ground MP modified by equipment.
MovementView.lblJump.values=Jump/UMU MP:,Jump MP:,?,Jump/VTOL/UMU:
MovementView.cbJumpType.text=Jump Type:
MovementView.cbJumpType.tooltip=Non-ground movement equipment.
MovementView.cbJumpType.null=None

FuelView.spnFuel.text=Fuel Mass:
FuelView.spnFuel.tooltip=The amount of mass allocated to fuel storage. For small support vehicles this is in kg.
FuelView.lblFuelPoints.text=Fuel Points:
FuelView.lblFuelPoints.tooltip=The number of fuel points provided by the allocated fuel.
FuelView.lblRange.text=Range (km)
FuelView.lblRange.tooltip=The vehicle's operating range for the given fuel capacity, in kilometers
FuelView.lblTurnsAtSafe.text=Turns at Safe:
FuelView.lblTurnsAtSafe.tooltip=The number of game turns the aircraft can operate at safe thrust before expending fuel.
FuelView.lblTurnsAtMax.text=Turns at Max:
FuelView.lblTurnsAtMax.tooltip=The number of game turns the aircraft can operate at maximum thrust before expending fuel.
FuelView.lblBurnDays1G.text=Burn Days 1G:
FuelView.lblBurnDays1G.tooltip=The number of days the craft can operate at 1G acceleration.
FuelView.lblBurnDaysMax.text=Burn Days Max:
FuelView.lblBurnDaysMax.tooltip=The number of days the craft can operate at maximum acceleration.
FuelView.cbFuelType.text=Fuel Type:
FuelView.cbFuelType.tooltip=Alternate fuels affect operating range and refueling costs.
FuelView.FuelType.PETROCHEMICALS=Petrochemicals
FuelView.FuelType.ALCOHOL=Alcohol
FuelView.FuelType.NATURAL_GAS=Natural Gas

PlatoonTypeView.cbMotiveType.values=Foot,Jump,Motorized,Mechanized (Hover),Mechanized (Tracked),Mechanized (Wheeled),VTOL (Micro-copter),VTOL (Microlite),SCUBA (Foot),SCUBA (Motorized),SCUBA (Mechanized)
PlatoonTypeView.cbMotiveType.text=Motive Type:
PlatoonTypeView.cbMotiveType.tooltip=Determines MP, movement mode, and maximum platoon and squad size.
PlatoonTypeView.spnNumSquads.text=# Squads:
PlatoonTypeView.spnNumSquads.tooltip=The number of squads in the platoon.
PlatoonTypeView.spnSquadSize.text=Squad Size:
PlatoonTypeView.spnSquadSize.tooltip=The number of soldiers in each squad.
PlatoonTypeView.lblMaxSize.text=Max Platoon Size:
PlatoonTypeView.lblMaxSize.tooltip=The maximum size for the platoon, determined by motive type and specialization.
PlatoonTypeView.lblMaxSquadSize.text=Max Squad Size:
PlatoonTypeView.lblMaxSquadSize.tooltip=The maximum size for each squad, determined by motive type and specialization.

InfantryWeaponView.txtGuns.badMotive=Invalid Motive Type
InfantryWeaponView.none=None
InfantryWeaponView.txtPrimary.text=Primary:
InfantryWeaponView.txtPrimary.tooltip=The primary weapon used by the unit.
InfantryWeaponView.txtSecondary.text=Secondary:
InfantryWeaponView.txtSecondary.tooltip=Optional secondary weapon carried by one or more soldiers in each squad.
InfantryWeaponView.txtGuns.text=Field Gun:
InfantryWeaponView.txtGuns.tooltip=<html>Optional field gun or field artillery piece (Advanced).<br/>Requires Motorized, Mechanized (Tracked), or Mechanized (Wheeled) motive type.</html>
InfantryWeaponView.cbNumSecondary.text=# Secondary:
InfantryWeaponView.cbNumSecondary.tooltip=The number of secondary weapons per squad. Limited by the weapon's crew rating.
InfantryWeaponView.cbNumGuns.text=# Field Guns:
InfantryWeaponView.cbNumGuns.tooltip=The number of field guns deployed by the unit. Limited by platoon size and gun tonnage. Artillery is limited to one weapon per platoon.
InfantryWeaponView.chkAntiMek.text=Anti-Mek Training:
InfantryWeaponView.chkAntiMek.tooltip=A unit with anti-mek training has a higher platoon tonnage due to special equipment.

BAEnhancementView.chkPartialWing.text=Partial Wing
BAEnhancementView.chkPartialWing.tooltip=Increases jump MP when used in an atmosphere. IS tech base only.
BAEnhancementView.chkJumpBooster.text=Jump Booster
BAEnhancementView.chkJumpBooster.tooltip=Increases jump MP.
BAEnhancementView.chkMechJumpBooster.text=Mechanical Jump Booster
BAEnhancementView.chkMechJumpBooster.tooltip=Provides one jump MP apart from any other movement mode, may be used underwater.
BAEnhancementView.chkMyomerBooster.text=Myomer Booster
BAEnhancementView.chkMyomerBooster.tooltip=Increases ground MP. Clan tech base only.

DropshipCriticalView.aerodyneArcs.values=Nose,Left Wing,Right Wing,Aft,Hull
DropshipCriticalView.spheroidArcs.values=Nose,Forward Left,Forward Right,Aft,Hull,Aft Left,Aft Right,-,-
DropshipCriticalView.capitalArcs.values=Nose,Forward Left,Forward Right,Aft,Aft Left,Aft Right,Hull,Left Broadside,Right Broadside
DropshipCriticalView.lblSlotCount.text=Slots used:
DropshipCriticalView.lblSlotCount.tooltip=The number of slots in this arc occupied by weapons
DropshipCriticalView.lblMaxSlots.text=Weight-free allowed:
DropshipCriticalView.lblMaxSlots.tooltip=Exceeding this number requires additional tonnage for fire control and power distribution systems.
DropshipCriticalView.lblExtraWeight.text=Extra tonnage:
DropshipCriticalView.lblExtraWeight.tooltip=The additional weight required for exceeding the base number of weapon in this arc.

AerospaceCrewView.spnOfficers.text=Officers:
AerospaceCrewView.spnOfficers.tooltip=<html>At least one in five crew members (six for advanced aerospace vessels; not including marines and bay personnel) is typically considered an officer (rounded up).<br/>The officers are counted among the total crew rather than additional personnel.
AerospaceCrewView.spnBaseCrew.text=Base Crew:
AerospaceCrewView.spnBaseCrew.tooltip=The number of crew required to run the vessel. Does not include gunners, marines, bay personnel, or passengers.
AerospaceCrewView.spnGunners.text=Gunners:
AerospaceCrewView.spnGunners.tooltip=Minimum of one per each capital weapon or each six standard-scale weapons.
AerospaceCrewView.lblTotalCrew.text=Total Crew:
AerospaceCrewView.lblTotalCrew.tooltip=The standard crew size for vessel operations. Does not include bay personnel, passengers, or marines.
AerospaceCrewView.lblBayPersonnel.text=Bay Personnel:
AerospaceCrewView.lblBayPersonnel.tooltip=The additional crew capacity provided by transport bays.
AerospaceCrewView.spnPassengers.text=Passengers:
AerospaceCrewView.spnPassengers.tooltip=Passenger capacity. Not counted among crew, but must be allocated quarters.
AerospaceCrewView.spnMarines.text=Marines:
AerospaceCrewView.spnMarines.tooltip=Defends vessel against boarding actions. Do not count toward officer requirements, but must be allocated quarters.
AerospaceCrewView.spnBAMarines.text=BA Marines:
AerospaceCrewView.spnBAMarines.tooltip=BattleArmored marines.
AerospaceCrewView.btnAssignQuarters.text=Auto-Assign Quarters
AerospaceCrewView.btnAssignQuarters.tooltip=<html>Assigns officer quarters for officers, standard crew quarters for remaining crew, and second-class quarters for passengers.<br/>If there were previously more officer/first class quarters assigned than the number of officers, these will be treated as first class passenger cabins.<br/>Any steerage quarters already assigned will be used first for marines not already assigned standard quarters, then passengers, then enlisted crew.</html>
AerospaceCrewView.lblQuarters.text=Quarters
AerospaceCrewView.spnQuartersFirstClass.text=First Class/Officer:
AerospaceCrewView.spnQuartersFirstClass.tooltip=Quarters for officers or luxury suite for first class passengers. 10 tons each.
AerospaceCrewView.spnQuartersStandard.text=Standard:
AerospaceCrewView.spnQuartersStandard.tooltip=Standard crew quarters. 7 tons each.
AerospaceCrewView.spnQuartersSecondClass.text=Second Class:
AerospaceCrewView.spnQuartersSecondClass.tooltip=Standard suite for second class passengers. 7 tons each.
AerospaceCrewView.spnQuartersSteerage.text=Steerage:
AerospaceCrewView.spnQuartersSteerage.tooltip=Basic room for crew or passenger. 5 tons each.
AerospaceCrewView.spnLifeBoats.text=Life Boats:
AerospaceCrewView.spnLifeBoats.tooltip=Designed to keep six passengers alive for up to a month in space.
AerospaceCrewView.spnEscapePods.text=Escape Pods:
AerospaceCrewView.spnEscapePods.tooltip=Designed to transport six passengers to a planetary surface in an emergency.

SVType.AIRSHIP=Airship
SVType.FIXED_WING=Fixed Wing
SVType.HOVERCRAFT=Hovercraft
SVType.NAVAL=Naval
SVType.TRACKED=Tracked
SVType.VTOL=VTOL
SVType.WHEELED=Wheeled
SVType.WIGE=WiGE
SVType.RAIL=Rail
SVType.SATELLITE=Satellite

SVChassisView.spnTonnage.text=Tonnage:
SVChassisView.spnTonnage.tooltip=Maximum tonnage varies with motive type. Small support vehicles track weight by kilograms instead of tons.
SVChassisView.chkSmall.text=Small
SVChassisView.chkSmall.tooltip=If selected, the weight is tracked by kilogram instead of tons.
SVChassisView.cbStructureTechRating.text=Structural Rating:
SVChassisView.cbStructureTechRating.tooltip=Higher tech ratings decrease the weight of the structure, but may increase cost.
SVChassisView.cbType.text=Vehicle Type:
SVChassisView.cbType.tooltip=The type of vehicle determines its movement type and legal equipment.
SVChassisView.cbEngine.text=Engine Type:
SVChassisView.cbEngine.tooltip=The type of engine to install in the support vehicle. Some engine types provide free heat sinks and some may require certain chassis mods.
SVChassisView.cbEngineTechRating.text=Engine Tech Rating:
SVChassisView.cbEngineTechRating.tooltip=Engines with a higher tech rating are lighter.
SVChassisView.chkSponson.text=Sponson Turrets
SVChassisView.chkSponson.tooltip=Weapons mounted in sponson turrets get a 180° firing on on the side.
SVChassisView.lblPintle.text=Pintle Turrets:
SVChassisView.chkPintleLeft.text=Left
SVChassisView.chkPintleRight.text=Right
SVChassisView.chkPintle.tooltip=Weapons mounted in a pintle turret have a 180° firing arc on that side
SVChassisView.cbFireCon.text=Fire Control:
SVChassisView.cbFireCon.tooltip=More advanced fire control adds weight but improves weapon accuracy and reduces gunnery crew requirements.
SVChassisView.fireCon.values=None,Basic,Advanced
SVChassisView.lblBaseChassisTurretWeight.text=Base Chassis Weights
SVChassisView.spnTurret1Wt.text=Turret 1:
SVChassisView.spnTurret2Wt.text=Turret 2:
SVChassisView.spnSponsonPintleWt.text=Sponson/Pintle:
SVChassisView.spnSponsonPintleWt.tooltip=Omni vehicles must determine the weight of the turret(s) as part of the base chassis configuration, limiting the weapon loadout in variants.
SVChassisView.spnFireConWt.text=Fire Control:
SVChassisView.spnFireConWt.tooltip=The weight of the fire control systems must be set as part of the base chassis design, possibly limiting the number of pod-mounted weapons.
SVChassisView.btnResetChassis.text=Reset Chassis
SVChassisView.btnResetChassis.tooltip=Remove all pod-mounted equipment to strip unit down to base omni chassis.

SVCrewView.lbMinimumCrew.text=Minimum Crew
SVCrewView.txtReqBaseCrew.text=Base Crew:
SVCrewView.txtReqBaseCrew.tooltip=Minimum base crew is determined by vehicle type and weight class.
SVCrewView.txtReqGunners.text=Gunners:
SVCrewView.txtReqGunners.tooltip=<html>Gunner requirements are determined by total weapon tonnage for medium and large support vehicles,<br/>\
  and by number of weapon facings for small. Better fire control systems reduce the gunner requirements.</html>
SVCrewView.txtReqOther.text=Other:
SVCrewView.txtReqOther.tooltip=Some non-weapon equipment, such as communications equipment and field hospitals, requires additional dedicated crew.
SVCrewView.txtReqOfficers.text=Officers:
SVCrewView.txtReqOfficers.tooltip=Vehicles with at least five crew members require an officer for every five non-officer crew.
SVCrewView.txtTotalMinCrew.text=Total:
SVCrewView.lblSeatingHeader.allSeats=Total Crew Seats
SVCrewView.lblSeatingHeader.extraSeats=Extra Crew Seats
SVCrewView.lblSeatingWeight.text=Weight (kg)
SVCrewView.spnStandardSeats.text=Standard Seats:
SVCrewView.spnStandardSeats.tooltip=Each standard combat seat weighs 75 kg. Medium and large support vehicles only need allocate crew seating in excess of minimum crew requirements.
SVCrewView.spnPillionSeats.text=Pillion Seats:
SVCrewView.spnPillionSeats.tooltip=<html>Pillion seating is external, such as on a hover bike or side car.<br/>\
   Each pillion seat weighs 25 kg. Medium and large support vehicles only need allocate crew seating in excess of minimum crew requirements.</html>
SVCrewView.spnEjectionSeats.text=Ejection Seats:
SVCrewView.spnEjectionSeats.tooltip=<html>Ejection seats are only available on small support vehicles and medium and large airborne vehicles.<br/>\
   Each ejection seat weighs 100 kg.</html>
SVCrewView.lblQuarters.text=Quarters
SVCrewView.lblPodQuarters.text=Pod
SVCrewView.lblQuartersWeight.text=Tons
SVCrewView.lblQuartersSlots.text=Slots
SVCrewView.spnFirstClass.text=First Class/Officer:
SVCrewView.spnFirstClass.tooltip=Requires 10 tons to accomodate each officer or first class passenger and requires one equipment slot per 5 people over minimum crew requirements.
SVCrewView.spnSecondClass.text=Second Class:
SVCrewView.spnSecondClass.tooltip=Requires 7 tons to accomodate each second class passenger and requires one equipment slot per 20 people over minimum crew requirements.
SVCrewView.spnCrewQuarters.text=Crew Quarters:
SVCrewView.spnCrewQuarters.tooltip=Standard crew quarters; requires 7 tons to accomodate each crew member and requires one equipment slot per 20 people over minimum crew requirements.
SVCrewView.spnSteerage.text=Steerage Class:
SVCrewView.spnSteerage.tooltip=Spartan quarters; requires 5 tons to accomodate each passenger or crew member and requires one equipment slot per fifty people over minimum crew requirements.
